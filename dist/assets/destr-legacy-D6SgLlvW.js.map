{"version":3,"file":"destr-legacy-D6SgLlvW.js","sources":["../../node_modules/destr/dist/index.mjs"],"sourcesContent":["const suspectProtoRx = /\"(?:_|\\\\u0{2}5[Ff]){2}(?:p|\\\\u0{2}70)(?:r|\\\\u0{2}72)(?:o|\\\\u0{2}6[Ff])(?:t|\\\\u0{2}74)(?:o|\\\\u0{2}6[Ff])(?:_|\\\\u0{2}5[Ff]){2}\"\\s*:/;\nconst suspectConstructorRx = /\"(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)\"\\s*:/;\nconst JsonSigRx = /^\\s*[\"[{]|^\\s*-?\\d{1,16}(\\.\\d{1,17})?([Ee][+-]?\\d+)?\\s*$/;\nfunction jsonParseTransform(key, value) {\n  if (key === \"__proto__\" || key === \"constructor\" && value && typeof value === \"object\" && \"prototype\" in value) {\n    warnKeyDropped(key);\n    return;\n  }\n  return value;\n}\nfunction warnKeyDropped(key) {\n  console.warn(`[destr] Dropping \"${key}\" key to prevent prototype pollution.`);\n}\nfunction destr(value, options = {}) {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  if (value[0] === '\"' && value[value.length - 1] === '\"' && value.indexOf(\"\\\\\") === -1) {\n    return value.slice(1, -1);\n  }\n  const _value = value.trim();\n  if (_value.length <= 9) {\n    switch (_value.toLowerCase()) {\n      case \"true\": {\n        return true;\n      }\n      case \"false\": {\n        return false;\n      }\n      case \"undefined\": {\n        return void 0;\n      }\n      case \"null\": {\n        return null;\n      }\n      case \"nan\": {\n        return Number.NaN;\n      }\n      case \"infinity\": {\n        return Number.POSITIVE_INFINITY;\n      }\n      case \"-infinity\": {\n        return Number.NEGATIVE_INFINITY;\n      }\n    }\n  }\n  if (!JsonSigRx.test(value)) {\n    if (options.strict) {\n      throw new SyntaxError(\"[destr] Invalid JSON\");\n    }\n    return value;\n  }\n  try {\n    if (suspectProtoRx.test(value) || suspectConstructorRx.test(value)) {\n      if (options.strict) {\n        throw new Error(\"[destr] Possible prototype pollution\");\n      }\n      return JSON.parse(value, jsonParseTransform);\n    }\n    return JSON.parse(value);\n  } catch (error) {\n    if (options.strict) {\n      throw error;\n    }\n    return value;\n  }\n}\nfunction safeDestr(value, options = {}) {\n  return destr(value, { ...options, strict: true });\n}\n\nexport { destr as default, destr, safeDestr };\n"],"names":["value","options","length","indexOf","slice","_value","trim","toLowerCase","Number","NaN","POSITIVE_INFINITY","NEGATIVE_INFINITY","JsonSigRx","test","strict","SyntaxError","suspectProtoRx","suspectConstructorRx","Error","JSON","parse","jsonParseTransform","error","key","console","warn","warnKeyDropped"],"mappings":"gFAaA,SAAeA,EAAOC,EAAU,IAC9B,GAAqB,iBAAVD,EACT,OAAOA,EAET,GAAiB,MAAbA,EAAM,IAA0C,MAA5BA,EAAMA,EAAME,OAAS,KAAsC,IAAxBF,EAAMG,QAAQ,MACvE,OAAOH,EAAMI,MAAM,MAErB,MAAMC,EAASL,EAAMM,OACrB,GAAID,EAAOH,QAAU,EACnB,OAAQG,EAAOE,eACb,IAAK,OACH,OAAO,EAET,IAAK,QACH,OAAY,EAEd,IAAK,YACH,OAEF,IAAK,OACH,YAEF,IAAK,MACH,OAAOC,OAAOC,IAEhB,IAAK,WACH,OAAOD,OAAOE,kBAEhB,IAAK,YACH,OAAOF,OAAOG,kBAIpB,IAAKC,EAAUC,KAAKb,GAAQ,CAC1B,GAAIC,EAAQa,OACV,MAAU,IAAAC,YAAY,wBAExB,OAAOf,CACX,CACE,IACE,GAAIgB,EAAeH,KAAKb,IAAUiB,EAAqBJ,KAAKb,GAAQ,CAClE,GAAIC,EAAQa,OACV,UAAUI,MAAM,wCAElB,OAAOC,KAAKC,MAAMpB,EAAOqB,EAC/B,CACI,OAAOF,KAAKC,MAAMpB,EACnB,CAAC,MAAOsB,GACP,GAAIrB,EAAQa,OACV,MAAMQ,EAER,OAAOtB,CACX,CACA,IAlEM,MAAAgB,EAAoJ,oIACpJC,EAAuB,iKACvBL,EAAY,2DAClB,SAASS,EAAmBE,EAAKvB,GAC/B,KAAY,cAARuB,GAA+B,gBAARA,GAAyBvB,GAA0B,iBAAVA,GAAsB,cAAeA,GAIzG,OAAOA,GAET,SAAwBuB,GACtBC,QAAQC,KAAK,qBAAqBF,yCACpC,CAPIG,CAAeH,EAInB,CAyDA,EAAA","x_google_ignoreList":[0]}