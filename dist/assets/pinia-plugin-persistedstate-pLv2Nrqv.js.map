{"version":3,"file":"pinia-plugin-persistedstate-pLv2Nrqv.js","sources":["../../node_modules/pinia-plugin-persistedstate/dist/index.js"],"sourcesContent":["// src/index.ts\nimport { destr } from \"destr\";\n\n// src/runtime/core.ts\nimport { deepOmitUnsafe, deepPickUnsafe } from \"deep-pick-omit\";\nfunction hydrateStore(store, {\n  storage,\n  serializer,\n  key,\n  debug,\n  pick,\n  omit,\n  beforeHydrate,\n  afterHydrate\n}, context, runHooks = true) {\n  try {\n    if (runHooks)\n      beforeHydrate?.(context);\n    const fromStorage = storage.getItem(key);\n    if (fromStorage) {\n      const deserialized = serializer.deserialize(fromStorage);\n      const picked = pick ? deepPickUnsafe(deserialized, pick) : deserialized;\n      const omitted = omit ? deepOmitUnsafe(picked, omit) : picked;\n      store.$patch(omitted);\n    }\n    if (runHooks)\n      afterHydrate?.(context);\n  } catch (error) {\n    if (debug)\n      console.error(\"[pinia-plugin-persistedstate]\", error);\n  }\n}\nfunction persistState(state, {\n  storage,\n  serializer,\n  key,\n  debug,\n  pick,\n  omit\n}) {\n  try {\n    const picked = pick ? deepPickUnsafe(state, pick) : state;\n    const omitted = omit ? deepOmitUnsafe(picked, omit) : picked;\n    const toStorage = serializer.serialize(omitted);\n    storage.setItem(key, toStorage);\n  } catch (error) {\n    if (debug)\n      console.error(\"[pinia-plugin-persistedstate]\", error);\n  }\n}\nfunction createPersistence(context, optionsParser, auto) {\n  const { pinia, store, options: { persist = auto } } = context;\n  if (!persist)\n    return;\n  if (!(store.$id in pinia.state.value)) {\n    const originalStore = pinia._s.get(store.$id.replace(\"__hot:\", \"\"));\n    if (originalStore)\n      Promise.resolve().then(() => originalStore.$persist());\n    return;\n  }\n  const persistenceOptions = Array.isArray(persist) ? persist : persist === true ? [{}] : [persist];\n  const persistences = persistenceOptions.map(optionsParser);\n  store.$hydrate = ({ runHooks = true } = {}) => {\n    persistences.forEach((p) => {\n      hydrateStore(store, p, context, runHooks);\n    });\n  };\n  store.$persist = () => {\n    persistences.forEach((p) => {\n      persistState(store.$state, p);\n    });\n  };\n  persistences.forEach((p) => {\n    hydrateStore(store, p, context);\n    store.$subscribe(\n      (_mutation, state) => persistState(state, p),\n      { detached: true }\n    );\n  });\n}\n\n// src/index.ts\nfunction createPersistedState(options = {}) {\n  return function(context) {\n    createPersistence(\n      context,\n      (p) => ({\n        key: (options.key ? options.key : (x) => x)(p.key ?? context.store.$id),\n        debug: p.debug ?? options.debug ?? false,\n        serializer: p.serializer ?? options.serializer ?? {\n          serialize: (data) => JSON.stringify(data),\n          deserialize: (data) => destr(data)\n        },\n        storage: p.storage ?? options.storage ?? window.localStorage,\n        beforeHydrate: p.beforeHydrate,\n        afterHydrate: p.afterHydrate,\n        pick: p.pick,\n        omit: p.omit\n      }),\n      options.auto ?? false\n    );\n  };\n}\nvar src_default = createPersistedState();\nexport {\n  createPersistedState,\n  src_default as default\n};\n"],"names":["destr","deepPickUnsafe","deepOmitUnsafe","hydrateStore","store","storage","serializer","key","debug","pick","omit","beforeHydrate","afterHydrate","context","runHooks","fromStorage","getItem","deserialized","deserialize","picked","omitted","$patch","error","persistState","state","toStorage","serialize","setItem","src_default","options","_a","optionsParser","auto","pinia","persist","$id","value","originalStore","_s","get","replace","Promise","resolve","then","$persist","persistences","Array","isArray","map","$hydrate","forEach","p","$state","$subscribe","_mutation","detached","createPersistence","_b","_c","_d","_e","_f","_g","x","data","JSON","stringify","window","localStorage","createPersistedState"],"mappings":"YAAAA,MAAA,kCAAAC,OAAAC,MAAA,+BAKA,SAASC,EAAaC,GAAOC,QAC3BA,EAAAC,WACAA,EAAAC,IACAA,EAAAC,MACAA,EAAAC,KACAA,EAAAC,KACAA,EAAAC,cACAA,EAAAC,aACAA,GACCC,EAASC,GAAW,GACjB,IACEA,IACc,MAAAH,GAAAA,EAAAE,IACZ,MAAAE,EAAcV,EAAQW,QAAQT,GACpC,GAAIQ,EAAa,CACT,MAAAE,EAAeX,EAAWY,YAAYH,GACtCI,EAASV,EAAOR,EAAegB,EAAcR,GAAQQ,EACrDG,EAAUV,EAAOR,EAAeiB,EAAQT,GAAQS,EACtDf,EAAMiB,OAAOD,EACnB,CACQN,IACa,MAAAF,GAAAA,EAAAC,GAClB,OAAQS,GAGX,CACA,CACA,SAASC,EAAaC,GAAOnB,QAC3BA,EAAAC,WACAA,EAAAC,IACAA,EAAAC,MACAA,EAAAC,KACAA,EAAAC,KACAA,IAEI,IACF,MAAMS,EAASV,EAAOR,EAAeuB,EAAOf,GAAQe,EAC9CJ,EAAUV,EAAOR,EAAeiB,EAAQT,GAAQS,EAChDM,EAAYnB,EAAWoB,UAAUN,GAC/Bf,EAAAsB,QAAQpB,EAAKkB,EACtB,OAAQH,GAGX,CACA,CAsDG,IAACM,EArBJ,SAA8BC,EAAU,IACtC,OAAO,SAAShB,GAnFlB,IAAAiB,GAkDA,SAA2BjB,EAASkB,EAAeC,GAC3C,MAAAC,MAAEA,QAAO7B,EAAOyB,SAASK,QAAEA,EAAUF,IAAWnB,EACtD,IAAKqB,EACH,OACF,KAAM9B,EAAM+B,OAAOF,EAAMT,MAAMY,OAAQ,CAC/B,MAAAC,EAAgBJ,EAAMK,GAAGC,IAAInC,EAAM+B,IAAIK,QAAQ,SAAU,KAG/D,YAFIH,GACFI,QAAQC,UAAUC,MAAK,IAAMN,EAAcO,aAEjD,CACE,MACMC,GADqBC,MAAMC,QAAQb,GAAWA,GAAsB,IAAZA,EAAmB,CAAC,IAAM,CAACA,IACjDc,IAAIjB,GAC5C3B,EAAM6C,SAAW,EAAGnC,YAAW,GAAS,CAAA,KACzB+B,EAAAK,SAASC,IACPhD,EAAAC,EAAO+C,EAAGtC,EAASC,EAAQ,GACzC,EAEHV,EAAMwC,SAAW,KACFC,EAAAK,SAASC,IACP5B,EAAAnB,EAAMgD,OAAQD,EAAC,GAC7B,EAEUN,EAAAK,SAASC,IACPhD,EAAAC,EAAO+C,EAAGtC,GACjBT,EAAAiD,YACJ,CAACC,EAAW9B,IAAUD,EAAaC,EAAO2B,IAC1C,CAAEI,UAAU,GACb,GAEL,CAKIC,CACE3C,GACCsC,IAtFP,IAAArB,EAAA2B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAsFc,MAAA,CACNvD,KAAMsB,EAAQtB,IAAMsB,EAAQtB,IAAOwD,GAAMA,GAAG,OAAAjC,EAAAqB,EAAE5C,KAAFuB,EAASjB,EAAQT,MAAM+B,KACnE3B,MAAO,OAAAkD,EAAA,OAAED,EAAAN,EAAA3C,OAASiD,EAAA5B,EAAQrB,QAASkD,EACnCpD,WAAY,OAAAsD,EAAA,OAAED,EAAAR,EAAA7C,YAAcqD,EAAA9B,EAAQvB,YAAcsD,EAAA,CAChDlC,UAAYsC,GAASC,KAAKC,UAAUF,GACpC9C,YAAc8C,GAAShE,EAAMgE,IAE/B3D,QAAS,OAAAyD,EAAA,OAAED,EAAAV,EAAA9C,WAAWwB,EAAQxB,WAAW8D,OAAOC,aAChDzD,cAAewC,EAAExC,cACjBC,aAAcuC,EAAEvC,aAChBH,KAAM0C,EAAE1C,KACRC,KAAMyC,EAAEzC,KAChB,GACM,OAAAoB,EAAAD,EAAQG,OAAQF,EAEnB,CACH,CACkBuC","x_google_ignoreList":[0]}