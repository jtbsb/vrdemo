{"version":3,"file":"destr-B-l8dKJQ.js","sources":["../../node_modules/destr/dist/index.mjs"],"sourcesContent":["const suspectProtoRx = /\"(?:_|\\\\u0{2}5[Ff]){2}(?:p|\\\\u0{2}70)(?:r|\\\\u0{2}72)(?:o|\\\\u0{2}6[Ff])(?:t|\\\\u0{2}74)(?:o|\\\\u0{2}6[Ff])(?:_|\\\\u0{2}5[Ff]){2}\"\\s*:/;\nconst suspectConstructorRx = /\"(?:c|\\\\u0063)(?:o|\\\\u006[Ff])(?:n|\\\\u006[Ee])(?:s|\\\\u0073)(?:t|\\\\u0074)(?:r|\\\\u0072)(?:u|\\\\u0075)(?:c|\\\\u0063)(?:t|\\\\u0074)(?:o|\\\\u006[Ff])(?:r|\\\\u0072)\"\\s*:/;\nconst JsonSigRx = /^\\s*[\"[{]|^\\s*-?\\d{1,16}(\\.\\d{1,17})?([Ee][+-]?\\d+)?\\s*$/;\nfunction jsonParseTransform(key, value) {\n  if (key === \"__proto__\" || key === \"constructor\" && value && typeof value === \"object\" && \"prototype\" in value) {\n    warnKeyDropped(key);\n    return;\n  }\n  return value;\n}\nfunction warnKeyDropped(key) {\n  console.warn(`[destr] Dropping \"${key}\" key to prevent prototype pollution.`);\n}\nfunction destr(value, options = {}) {\n  if (typeof value !== \"string\") {\n    return value;\n  }\n  if (value[0] === '\"' && value[value.length - 1] === '\"' && value.indexOf(\"\\\\\") === -1) {\n    return value.slice(1, -1);\n  }\n  const _value = value.trim();\n  if (_value.length <= 9) {\n    switch (_value.toLowerCase()) {\n      case \"true\": {\n        return true;\n      }\n      case \"false\": {\n        return false;\n      }\n      case \"undefined\": {\n        return void 0;\n      }\n      case \"null\": {\n        return null;\n      }\n      case \"nan\": {\n        return Number.NaN;\n      }\n      case \"infinity\": {\n        return Number.POSITIVE_INFINITY;\n      }\n      case \"-infinity\": {\n        return Number.NEGATIVE_INFINITY;\n      }\n    }\n  }\n  if (!JsonSigRx.test(value)) {\n    if (options.strict) {\n      throw new SyntaxError(\"[destr] Invalid JSON\");\n    }\n    return value;\n  }\n  try {\n    if (suspectProtoRx.test(value) || suspectConstructorRx.test(value)) {\n      if (options.strict) {\n        throw new Error(\"[destr] Possible prototype pollution\");\n      }\n      return JSON.parse(value, jsonParseTransform);\n    }\n    return JSON.parse(value);\n  } catch (error) {\n    if (options.strict) {\n      throw error;\n    }\n    return value;\n  }\n}\nfunction safeDestr(value, options = {}) {\n  return destr(value, { ...options, strict: true });\n}\n\nexport { destr as default, destr, safeDestr };\n"],"names":["suspectProtoRx","suspectConstructorRx","JsonSigRx","jsonParseTransform","key","value","destr","options","length","indexOf","slice","_value","trim","toLowerCase","Number","NaN","POSITIVE_INFINITY","NEGATIVE_INFINITY","test","strict","SyntaxError","Error","JSON","parse","error"],"mappings":"AAAA,MAAMA,EAAiB,oIACjBC,EAAuB,iKACvBC,EAAY,2DAClB,SAASC,EAAmBC,EAAKC,GAC3B,KAAQ,cAARD,GAA+B,gBAARA,GAAyBC,GAA0B,iBAAVA,GAAsB,cAAeA,GAIlG,OAAAA,CACT,CAIA,SAASC,EAAMD,EAAOE,EAAU,IAC1B,GAAiB,iBAAVF,EACF,OAAAA,EAET,GAAiB,MAAbA,EAAM,IAA0C,MAA5BA,EAAMA,EAAMG,OAAS,KAA0C,IAA5BH,EAAMI,QAAQ,MAChE,OAAAJ,EAAMK,MAAM,GAAK,GAEpB,MAAAC,EAASN,EAAMO,OACjB,GAAAD,EAAOH,QAAU,EACX,OAAAG,EAAOE,eACb,IAAK,OACI,OAAA,EAET,IAAK,QACI,OAAA,EAET,IAAK,YACI,OAET,IAAK,OACI,OAAA,KAET,IAAK,MACH,OAAOC,OAAOC,IAEhB,IAAK,WACH,OAAOD,OAAOE,kBAEhB,IAAK,YACH,OAAOF,OAAOG,kBAIpB,IAAKf,EAAUgB,KAAKb,GAAQ,CAC1B,GAAIE,EAAQY,OACJ,MAAA,IAAIC,YAAY,wBAEjB,OAAAf,CACX,CACM,IACF,GAAIL,EAAekB,KAAKb,IAAUJ,EAAqBiB,KAAKb,GAAQ,CAClE,GAAIE,EAAQY,OACJ,MAAA,IAAIE,MAAM,wCAEX,OAAAC,KAAKC,MAAMlB,EAAOF,EAC/B,CACW,OAAAmB,KAAKC,MAAMlB,EACnB,OAAQmB,GACP,GAAIjB,EAAQY,OACJ,MAAAK,EAED,OAAAnB,CACX,CACA","x_google_ignoreList":[0]}