{"version":3,"file":"pinia-plugin-persistedstate-legacy-BnHCTUwj.js","sources":["../../node_modules/pinia-plugin-persistedstate/dist/index.js"],"sourcesContent":["// src/index.ts\nimport { destr } from \"destr\";\n\n// src/runtime/core.ts\nimport { deepOmitUnsafe, deepPickUnsafe } from \"deep-pick-omit\";\nfunction hydrateStore(store, {\n  storage,\n  serializer,\n  key,\n  debug,\n  pick,\n  omit,\n  beforeHydrate,\n  afterHydrate\n}, context, runHooks = true) {\n  try {\n    if (runHooks)\n      beforeHydrate?.(context);\n    const fromStorage = storage.getItem(key);\n    if (fromStorage) {\n      const deserialized = serializer.deserialize(fromStorage);\n      const picked = pick ? deepPickUnsafe(deserialized, pick) : deserialized;\n      const omitted = omit ? deepOmitUnsafe(picked, omit) : picked;\n      store.$patch(omitted);\n    }\n    if (runHooks)\n      afterHydrate?.(context);\n  } catch (error) {\n    if (debug)\n      console.error(\"[pinia-plugin-persistedstate]\", error);\n  }\n}\nfunction persistState(state, {\n  storage,\n  serializer,\n  key,\n  debug,\n  pick,\n  omit\n}) {\n  try {\n    const picked = pick ? deepPickUnsafe(state, pick) : state;\n    const omitted = omit ? deepOmitUnsafe(picked, omit) : picked;\n    const toStorage = serializer.serialize(omitted);\n    storage.setItem(key, toStorage);\n  } catch (error) {\n    if (debug)\n      console.error(\"[pinia-plugin-persistedstate]\", error);\n  }\n}\nfunction createPersistence(context, optionsParser, auto) {\n  const { pinia, store, options: { persist = auto } } = context;\n  if (!persist)\n    return;\n  if (!(store.$id in pinia.state.value)) {\n    const originalStore = pinia._s.get(store.$id.replace(\"__hot:\", \"\"));\n    if (originalStore)\n      Promise.resolve().then(() => originalStore.$persist());\n    return;\n  }\n  const persistenceOptions = Array.isArray(persist) ? persist : persist === true ? [{}] : [persist];\n  const persistences = persistenceOptions.map(optionsParser);\n  store.$hydrate = ({ runHooks = true } = {}) => {\n    persistences.forEach((p) => {\n      hydrateStore(store, p, context, runHooks);\n    });\n  };\n  store.$persist = () => {\n    persistences.forEach((p) => {\n      persistState(store.$state, p);\n    });\n  };\n  persistences.forEach((p) => {\n    hydrateStore(store, p, context);\n    store.$subscribe(\n      (_mutation, state) => persistState(state, p),\n      { detached: true }\n    );\n  });\n}\n\n// src/index.ts\nfunction createPersistedState(options = {}) {\n  return function(context) {\n    createPersistence(\n      context,\n      (p) => ({\n        key: (options.key ? options.key : (x) => x)(p.key ?? context.store.$id),\n        debug: p.debug ?? options.debug ?? false,\n        serializer: p.serializer ?? options.serializer ?? {\n          serialize: (data) => JSON.stringify(data),\n          deserialize: (data) => destr(data)\n        },\n        storage: p.storage ?? options.storage ?? window.localStorage,\n        beforeHydrate: p.beforeHydrate,\n        afterHydrate: p.afterHydrate,\n        pick: p.pick,\n        omit: p.omit\n      }),\n      options.auto ?? false\n    );\n  };\n}\nvar src_default = createPersistedState();\nexport {\n  createPersistedState,\n  src_default as default\n};\n"],"names":["System","register","exports","module","destr","deepPickUnsafe","deepOmitUnsafe","setters","d","a","execute","hydrateStore","store","storage","serializer","key","debug","pick","omit","beforeHydrate","afterHydrate","context","runHooks","fromStorage","getItem","deserialized","deserialize","picked","omitted","$patch","error","console","persistState","state","toStorage","serialize","setItem","options","optionsParser","auto","pinia","persist","$id","value","originalStore","_s","get","replace","Promise","resolve","then","$persist","persistences","Array","isArray","map","$hydrate","forEach","p","$state","$subscribe","_mutation","detached","createPersistence","x","data","JSON","stringify","window","localStorage","createPersistedState"],"mappings":"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","x_google_ignoreList":[0]}